{"ast":null,"code":"import _objectSpread from \"D:\\\\React-Http-Requests\\\\webajax\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\React-Http-Requests\\\\webajax\\\\src\\\\containers\\\\Blog\\\\Blog.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './Blog.css';\n\nclass Blog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: [],\n      selectedPostID: null,\n      error: false\n    };\n\n    this.postSelectedHandler = id => {\n      this.setState({\n        selectedPostID: id\n      });\n    };\n  }\n\n  //This lifecycle is best for http requests as HTTP\n  //Requests are Side Effects\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/posts').then(response => {\n      const fourposts = response.data.slice(0, 4); //Get only first 4 responses\n\n      const updatedPosts = fourposts.map(mypost => {\n        return _objectSpread({}, mypost, {\n          author: 'Namit'\n        });\n      });\n      this.setState({\n        posts: updatedPosts\n      });\n    }).catch(error => {\n      //Error Handler\n      this.setState({\n        error: true\n      });\n      console.log(error);\n    });\n  }\n\n  render() {\n    let jsonposts = React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Something Went Wrong\");\n\n    if (!this.state.error) {\n      jsonposts = this.state.posts.map(mypost => {\n        return React.createElement(Post, {\n          title: mypost.title,\n          key: mypost.id,\n          author: mypost.author,\n          clicked: () => this.postSelectedHandler(mypost.id)\n          /*Gets the ID of post clicked*/\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      });\n    }\n\n    return (//To enable routing: npm install --save react-router react-router-dom\n      React.createElement(\"div\", {\n        className: \"Blog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"./\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Home\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"./\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"New Post\"))))), React.createElement(\"section\", {\n        className: \"Posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, jsonposts))\n    );\n  }\n\n}\n\nexport default Blog;","map":{"version":3,"sources":["D:/React-Http-Requests/webajax/src/containers/Blog/Blog.js"],"names":["React","Component","axios","Blog","state","posts","selectedPostID","error","postSelectedHandler","id","setState","componentDidMount","get","then","response","fourposts","data","slice","updatedPosts","map","mypost","author","catch","console","log","render","jsonposts","textAlign","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAEzBG,KAFyB,GAEjB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,cAAc,EAAE,IAFZ;AAGJC,MAAAA,KAAK,EAAE;AAHH,KAFiB;;AAAA,SA2BzBC,mBA3ByB,GA2BFC,EAAD,IAAO;AAC1B,WAAKC,QAAL,CAAc;AAACJ,QAAAA,cAAc,EAAEG;AAAjB,OAAd;AACF,KA7BwB;AAAA;;AAOzB;AACA;AACAE,EAAAA,iBAAiB,GAAE;AACjBT,IAAAA,KAAK,CAACU,GAAN,CAAU,4CAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChB,YAAMC,SAAS,GAAGD,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAlB,CADgB,CAC6B;;AAC7C,YAAMC,YAAY,GAAGH,SAAS,CAACI,GAAV,CAAcC,MAAM,IAAI;AACzC,iCACOA,MADP;AAEIC,UAAAA,MAAM,EAAE;AAFZ;AAIH,OALoB,CAArB;AAMC,WAAKX,QAAL,CAAc;AAACL,QAAAA,KAAK,EAACa;AAAP,OAAd;AACF,KAVD,EAWCI,KAXD,CAWOf,KAAK,IAAG;AAAE;AACf,WAAKG,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAE;AAAR,OAAd;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACD,KAdD;AAeD;;AAMDkB,EAAAA,MAAM,GAAI;AACN,QAAIC,SAAS,GAAG;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAhB;;AACA,QAAG,CAAC,KAAKvB,KAAL,CAAWG,KAAf,EAAqB;AACnBmB,MAAAA,SAAS,GAAG,KAAKtB,KAAL,CAAWC,KAAX,CAAiBc,GAAjB,CAAqBC,MAAM,IAAI;AAC3C,eAAO,oBAAC,IAAD;AACP,UAAA,KAAK,EAAEA,MAAM,CAACQ,KADP;AAEP,UAAA,GAAG,EAAER,MAAM,CAACX,EAFL;AAGP,UAAA,MAAM,EAAEW,MAAM,CAACC,MAHR;AAIP,UAAA,OAAO,EAAE,MAAI,KAAKb,mBAAL,CAAyBY,MAAM,CAACX,EAAhC;AAAmC;AAJzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD,OANa,CAAZ;AAOD;;AACD,WACE;AACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAG,QAAA,IAAI,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAG,QAAA,IAAI,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAJ,CAFA,CADF,CADF,CADA,EAQI;AAAS,QAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIiB,SADJ,CARJ;AAFJ;AAgBH;;AA1DwB;;AA6D7B,eAAevB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './Blog.css';\n\nclass Blog extends Component {\n    \n    state = {\n        posts: [],\n        selectedPostID: null,\n        error: false\n    }\n    //This lifecycle is best for http requests as HTTP\n    //Requests are Side Effects\n    componentDidMount(){\n      axios.get('https://jsonplaceholder.typicode.com/posts')\n      .then(response => {\n        const fourposts = response.data.slice(0, 4); //Get only first 4 responses\n        const updatedPosts = fourposts.map(mypost => {\n            return {\n                ...mypost,\n                author: 'Namit'\n            }\n        });\n         this.setState({posts:updatedPosts});\n      })\n      .catch(error =>{ //Error Handler\n        this.setState({error: true});\n        console.log(error);\n      });\n    }\n\n    postSelectedHandler = (id) =>{\n       this.setState({selectedPostID: id});\n    }\n\n    render () {\n        let jsonposts = <p style={{textAlign: 'center'}}>Something Went Wrong</p>;\n        if(!this.state.error){\n          jsonposts = this.state.posts.map(mypost => {\n          return <Post \n          title={mypost.title} \n          key={mypost.id} \n          author={mypost.author}\n          clicked={()=>this.postSelectedHandler(mypost.id)/*Gets the ID of post clicked*/}/>;\n        });\n        }\n        return (\n          //To enable routing: npm install --save react-router react-router-dom\n            <div className='Blog'>\n            <header> \n              <nav>\n                <ul>\n                <li><a href='./'>Home</a></li>\n                <li><a href='./'>New Post</a></li>\n                  </ul>\n               </nav></header>\n                <section className=\"Posts\">\n                   {jsonposts}\n                </section>\n                \n            </div>\n        );\n    }\n}\n\nexport default Blog;"]},"metadata":{},"sourceType":"module"}