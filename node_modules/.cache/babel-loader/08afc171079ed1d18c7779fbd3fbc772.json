{"ast":null,"code":"import _objectSpread from \"D:\\\\React-Http-Requests\\\\webajax\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\React-Http-Requests\\\\webajax\\\\src\\\\containers\\\\Posts\\\\Posts.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.postSelectedHandler = id => {\n      this.setState({\n        selectedPostID: id\n      });\n    };\n  }\n\n  //This lifecycle is best for http requests as HTTP\n  //Requests are Side Effects\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/posts').then(response => {\n      const fourposts = response.data.slice(0, 4); //Get only first 4 responses\n\n      const updatedPosts = fourposts.map(mypost => {\n        return _objectSpread({}, mypost, {\n          author: 'Namit'\n        });\n      });\n      this.setState({\n        posts: updatedPosts\n      });\n    }).catch(error => {\n      //Error Handler\n      this.setState({\n        error: true\n      });\n      console.log(error);\n    });\n  }\n\n  render() {\n    let jsonposts = React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Something Went Wrong\");\n\n    if (!this.state.error) {\n      jsonposts = this.state.posts.map(mypost => {\n        return React.createElement(Post, {\n          title: mypost.title,\n          key: mypost.id,\n          author: mypost.author,\n          clicked: () => this.postSelectedHandler(mypost.id)\n          /*Gets the ID of post clicked*/\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      });\n    }\n\n    return React.createElement(\"section\", {\n      className: \"Posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, jsonposts);\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["D:/React-Http-Requests/webajax/src/containers/Posts/Posts.js"],"names":["React","Component","axios","Posts","state","posts","postSelectedHandler","id","setState","selectedPostID","componentDidMount","get","then","response","fourposts","data","slice","updatedPosts","map","mypost","author","catch","error","console","log","render","jsonposts","textAlign","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,KAAN,SAAoBF,SAApB,CAA6B;AAAA;AAAA;AAAA,SAC5BG,KAD4B,GACpB;AACHC,MAAAA,KAAK,EAAE;AADJ,KADoB;;AAAA,SAwBzBC,mBAxByB,GAwBFC,EAAD,IAAO;AAC1B,WAAKC,QAAL,CAAc;AAACC,QAAAA,cAAc,EAAEF;AAAjB,OAAd;AACF,KA1BwB;AAAA;;AAIxB;AACD;AACAG,EAAAA,iBAAiB,GAAE;AACjBR,IAAAA,KAAK,CAACS,GAAN,CAAU,4CAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChB,YAAMC,SAAS,GAAGD,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAlB,CADgB,CAC6B;;AAC7C,YAAMC,YAAY,GAAGH,SAAS,CAACI,GAAV,CAAcC,MAAM,IAAI;AACzC,iCACOA,MADP;AAEIC,UAAAA,MAAM,EAAE;AAFZ;AAIH,OALoB,CAArB;AAMC,WAAKZ,QAAL,CAAc;AAACH,QAAAA,KAAK,EAACY;AAAP,OAAd;AACF,KAVD,EAWCI,KAXD,CAWOC,KAAK,IAAG;AAAE;AACf,WAAKd,QAAL,CAAc;AAACc,QAAAA,KAAK,EAAE;AAAR,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAdD;AAeD;;AAKJG,EAAAA,MAAM,GAAE;AACP,QAAIC,SAAS,GAAG;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAhB;;AACM,QAAG,CAAC,KAAKvB,KAAL,CAAWkB,KAAf,EAAqB;AACnBI,MAAAA,SAAS,GAAG,KAAKtB,KAAL,CAAWC,KAAX,CAAiBa,GAAjB,CAAqBC,MAAM,IAAI;AAC3C,eAAO,oBAAC,IAAD;AACP,UAAA,KAAK,EAAEA,MAAM,CAACS,KADP;AAEP,UAAA,GAAG,EAAET,MAAM,CAACZ,EAFL;AAGP,UAAA,MAAM,EAAEY,MAAM,CAACC,MAHR;AAIP,UAAA,OAAO,EAAE,MAAI,KAAKd,mBAAL,CAAyBa,MAAM,CAACZ,EAAhC;AAAmC;AAJzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD,OANa,CAAZ;AAOD;;AACP,WACC;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACamB,SADb,CADD;AAKA;;AA3C2B;;AA8C7B,eAAevB,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nclass Posts extends Component{\r\n\tstate = {\r\n      posts: []\r\n    };\r\n     //This lifecycle is best for http requests as HTTP\r\n    //Requests are Side Effects\r\n    componentDidMount(){\r\n      axios.get('https://jsonplaceholder.typicode.com/posts')\r\n      .then(response => {\r\n        const fourposts = response.data.slice(0, 4); //Get only first 4 responses\r\n        const updatedPosts = fourposts.map(mypost => {\r\n            return {\r\n                ...mypost,\r\n                author: 'Namit'\r\n            }\r\n        });\r\n         this.setState({posts:updatedPosts});\r\n      })\r\n      .catch(error =>{ //Error Handler\r\n        this.setState({error: true});\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n    postSelectedHandler = (id) =>{\r\n       this.setState({selectedPostID: id});\r\n    }\r\n\trender(){\r\n\t\tlet jsonposts = <p style={{textAlign: 'center'}}>Something Went Wrong</p>;\r\n        if(!this.state.error){\r\n          jsonposts = this.state.posts.map(mypost => {\r\n          return <Post \r\n          title={mypost.title} \r\n          key={mypost.id} \r\n          author={mypost.author}\r\n          clicked={()=>this.postSelectedHandler(mypost.id)/*Gets the ID of post clicked*/}/>;\r\n        });\r\n        }\r\n\t\treturn(\r\n\t\t\t<section className=\"Posts\">\r\n               {jsonposts}\r\n            </section>\r\n\t  );\r\n\t}\r\n}\r\n\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}