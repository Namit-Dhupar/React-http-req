{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Http-Requests\\\\webajax\\\\src\\\\containers\\\\Blog\\\\Blog.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Post from '../../components/Post/Post';\nimport FullPost from '../../components/FullPost/FullPost';\nimport NewPost from '../../components/NewPost/NewPost';\nimport './Blog.css';\n\nclass Blog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n  }\n\n  //This lifecycle is best for http requests as HTTP\n  //Requests are Side Effects\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/posts').then(response => {\n      this.setState({\n        posts: response.data\n      });\n    });\n  }\n\n  render() {\n    const jsonposts = this.state.posts.map(mypost => {\n      return React.createElement(Post, {\n        title: mypost.title,\n        key: mypost.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"Posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, jsonposts), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(FullPost, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(NewPost, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Blog;","map":{"version":3,"sources":["D:/React-Http-Requests/webajax/src/containers/Blog/Blog.js"],"names":["React","Component","axios","Post","FullPost","NewPost","Blog","state","posts","componentDidMount","get","then","response","setState","data","render","jsonposts","map","mypost","title","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAEzBM,KAFyB,GAEjB;AACJC,MAAAA,KAAK,EAAE;AADH,KAFiB;AAAA;;AAKzB;AACA;AACAC,EAAAA,iBAAiB,GAAE;AACjBP,IAAAA,KAAK,CAACQ,GAAN,CAAU,4CAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AACf,WAAKC,QAAL,CAAc;AAACL,QAAAA,KAAK,EAACI,QAAQ,CAACE;AAAhB,OAAd;AACF,KAHD;AAID;;AACDC,EAAAA,MAAM,GAAI;AACN,UAAMC,SAAS,GAAG,KAAKT,KAAL,CAAWC,KAAX,CAAiBS,GAAjB,CAAqBC,MAAM,IAAI;AAC/C,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEA,MAAM,CAACC,KAApB;AAA2B,QAAA,GAAG,EAAED,MAAM,CAACE,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFiB,CAAlB;AAGA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIJ,SADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CADJ;AAaH;;AA9BwB;;AAiC7B,eAAeV,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Post from '../../components/Post/Post';\nimport FullPost from '../../components/FullPost/FullPost';\nimport NewPost from '../../components/NewPost/NewPost';\nimport './Blog.css';\n\nclass Blog extends Component {\n    \n    state = {\n        posts: []\n    }\n    //This lifecycle is best for http requests as HTTP\n    //Requests are Side Effects\n    componentDidMount(){\n      axios.get('https://jsonplaceholder.typicode.com/posts')\n      .then(response => {\n         this.setState({posts:response.data});\n      });\n    }\n    render () {\n        const jsonposts = this.state.posts.map(mypost => {\n          return <Post title={mypost.title} key={mypost.id}/>;\n        });\n        return (\n            <div>\n                <section className=\"Posts\">\n                   {jsonposts}\n                </section>\n                <section>\n                    <FullPost />\n                </section>\n                <section>\n                    <NewPost />\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default Blog;"]},"metadata":{},"sourceType":"module"}